name: Package BiblePro App
# This workflow handles both nightly builds and version releases:
# - Runs automatically at midnight UTC every day to create nightly releases
# - Runs when a tag starting with 'v' is pushed to create version releases
# - Can be manually triggered via workflow_dispatch
# - Builds for Linux (deb/rpm), Windows (msi), and Android (apk)

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  linux:
    name: Package on Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: ./gradlew packageDeb packageRpm
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: |
            build/compose/binaries/main/deb
            build/compose/binaries/main/rpm

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || 'nightly' }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || 'nightly' }}
          files: build/compose/binaries/main/*/*
          prerelease: ${{ github.ref_type != 'tag' }}
  windows:
    name: Package on Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        run: ./gradlew packageMsi

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || 'nightly' }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || 'nightly' }}
          files: build/compose/binaries/main/msi/*
          prerelease: ${{ github.ref_type != 'tag' }}

  android:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-android-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-android-
            ${{ runner.os }}-gradle-
      
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      
      - name: Build Android Debug APK
        run: ./gradlew assembleDebug
      
      - name: Build Android Release APK
        run: ./gradlew assembleRelease
      
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: build/outputs/apk/debug/*.apk
      
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk
          path: build/outputs/apk/release/*.apk
      
      - name: Release APKs
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || 'nightly' }}
          name: ${{ github.ref_type == 'tag' && github.ref_name || 'nightly' }}
          files: |
            build/outputs/apk/debug/*.apk
            build/outputs/apk/release/*.apk
          prerelease: ${{ github.ref_type != 'tag' }}
